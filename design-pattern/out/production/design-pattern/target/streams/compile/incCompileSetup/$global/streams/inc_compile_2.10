format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.10.6
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
42 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Approver.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ApproverTest$.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ApproverTest.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Director.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Persisdent.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Request$.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Request.class
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/VicePersisdent.class
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/CacheProviderHandler.class
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQuery2.class
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryDynamicFactory.class
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DynaticProxy.class
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/RealDBQuery2.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Color.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ColorFactory$.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ColorFactory.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/FlyweighTest$.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/FlyweighTest.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Point$.class
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Point.class
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/JavaStringTest.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Book.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Memento$.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Memento.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoCareTaker.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoTest$.class
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoTest.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/BookStore.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable$$anonfun$notify2$1.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable$class.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observer.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ObserverTest$.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ObserverTest.class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Reader.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQuery.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryFactory$.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryFactory.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryProxy.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ProxyTest$.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ProxyTest.class
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/RealDBQuery.class
binary dependencies:
12 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> /Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> /Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> /Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> /Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> /Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
2 items
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> /Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java
member reference external dependencies:
0 items
inheritance internal dependencies:
1 items
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> /Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java
inheritance external dependencies:
0 items
class names:
42 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Approver
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ApproverTest
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ApproverTest$
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Director
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Persisdent
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Request
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Request$
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> VicePersisdent
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> CacheProviderHandler
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> DBQuery2
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> DBQueryDynamicFactory
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> DynaticProxy
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> RealDBQuery2
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Color
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> ColorFactory
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> ColorFactory$
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> FlyweighTest
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> FlyweighTest$
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Point
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Point$
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> JavaStringTest
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Book
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Memento
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Memento$
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> MementoCareTaker
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> MementoTest
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> MementoTest$
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> BookStore
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observable
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observable$$anonfun$notify2$1
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observable$class
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observer
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> ObserverTest
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> ObserverTest$
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Reader
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQuery
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQueryFactory
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQueryFactory$
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQueryProxy
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> ProxyTest
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> ProxyTest$
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> RealDBQuery
used names:
270 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> !=
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> &&
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> *
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> <
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> <init>
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> <repeated>
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ==
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> A
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> AbstractFunction3
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Any
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> AnyRef
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Approver
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ApproverTest
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Array
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Boolean
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Console
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Director
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> IndexOutOfBoundsException
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Int
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Iterator
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> None
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Nothing
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Object
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Option
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Persisdent
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Predef
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Product
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Request
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ScalaRunTime
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Serializable
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Some
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Statics
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> String
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> StringOps
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> T
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> T0
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> T1
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> T2
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> T3
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Tuple3
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> Unit
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> VicePersisdent
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> _toString
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> anyHash
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> asInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> augmentString
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> count
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> director
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> eq
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> finalizeHash
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> format
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> get
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> isInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> mix
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> name
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> package
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> persisdent
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> price
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> println
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> process
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> req
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> runtime
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> scala
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> successer
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> successer_=
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> toString
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> typedProductIterator
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> vicePersisdent
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> ||
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> <init>
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> <repeated>
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> ==
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Any
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> AnyRef
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Array
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Boolean
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Color
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> ColorFactory
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Console
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> FlyweighTest
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> HashMap
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Int
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Object
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Point
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Predef
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> String
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> StringOps
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> Unit
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> apply
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> augmentString
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> color
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> colorString
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> format
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> get
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> hash
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> java
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> point1
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> point2
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> point3
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> point4
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> print
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> put
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> scala
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> util
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> x
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> y
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> &&
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> +
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> +=
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> -
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> -=
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> <
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> <init>
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> <repeated>
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> ==
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> A
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> AbstractFunction1
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Any
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> AnyRef
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Array
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> ArrayBuffer
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Book
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Boolean
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Console
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> IndexOutOfBoundsException
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Int
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Iterator
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Memento
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> MementoCareTaker
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> MementoTest
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> None
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Nothing
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Object
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Predef
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Product
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> ScalaRunTime
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Serializable
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Some
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Statics
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> String
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> StringOps
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> T
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> T0
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> Unit
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> _toString
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> apply
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> asInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> augmentString
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> book
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> collection
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> currentPage
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> currentPage_=
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> eq
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> finalizeHash
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> format
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> getMemento
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> isInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> length
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> memento
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> mementoCareTaker
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> mementoList
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> mix
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> mutable
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> package
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> page
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> print
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> println
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> read
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> runtime
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> save
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> saveMemento
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> scala
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> toString
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> totalPage
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> typedProductIterator
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> undo
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> ||
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> +=
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> -=
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> <init>
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> <repeated>
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Any
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> AnyRef
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Array
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> ArrayBuffer
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> BookStore
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Boolean
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Console
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Function1
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Nothing
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Object
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observable
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Observer
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> ObserverTest
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Predef
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Reader
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> String
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> StringOps
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> T0
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> U
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> Unit
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> addBook
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> asInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> attach
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> augmentString
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> bookname
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> bookstore
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> bookstore1
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> bookstore2
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> collection
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> foreach
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> format
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> isInstanceOf
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> mutable
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> name
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> notify2
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> observer
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> observers
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> println
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> reader1
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> reader2
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> reader3
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> scala
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> update
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> +=
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> ->
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> <init>
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> <repeated>
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> A
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Any
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> AnyRef
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Array
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> ArrowAssoc
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> B
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Boolean
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Console
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQuery
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQueryFactory
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> DBQueryProxy
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> HashMap
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Long
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Nothing
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Object
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Predef
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> ProxyTest
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> RealDBQuery
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> String
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> StringOps
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Thread
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Tuple2
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> Unit
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> any2ArrowAssoc
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> apply
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> augmentString
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> cache
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> collection
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> contains
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> dbQuery
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> doQuery
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> format
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> java
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> lang
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> mutable
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> name
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> println
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> real
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> rs
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> scala
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> sleep
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> unary_!
product stamps:
42 items
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Approver.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ApproverTest$.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ApproverTest.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Book.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/BookStore.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/CacheProviderHandler.class -> lastModified(1480837218000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Color.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ColorFactory$.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ColorFactory.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQuery.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQuery2.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryDynamicFactory.class -> lastModified(1480837218000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryFactory$.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryFactory.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DBQueryProxy.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Director.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/DynaticProxy.class -> lastModified(1480837218000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/FlyweighTest$.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/FlyweighTest.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/JavaStringTest.class -> lastModified(1480777436000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Memento$.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Memento.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoCareTaker.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoTest$.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/MementoTest.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable$$anonfun$notify2$1.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable$class.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observable.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Observer.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ObserverTest$.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ObserverTest.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Persisdent.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Point$.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Point.class -> lastModified(1480773017000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ProxyTest$.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/ProxyTest.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Reader.class -> lastModified(1480772996000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/RealDBQuery.class -> lastModified(1480837217000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/RealDBQuery2.class -> lastModified(1480837218000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Request$.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/Request.class -> lastModified(1480846795000)
/Users/stone/github-code/PracticeCode/design-pattern/target/scala-2.10/classes/VicePersisdent.class -> lastModified(1480846795000)
source stamps:
7 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> hash(17cb6e7e9ab58b79472446ae9215dbaf56d81716)
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> hash(690e4e19583f8149b56132b4f3677cef0d415a87)
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> hash(b31f66611895e8aad5eb9438f1d259dff67c0c25)
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> hash(f10d10946b375723871de75d969a2db10b4443e9)
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> hash(e4db66a506303514dae9920218ed2f492fb5fd9d)
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> hash(19cfccf823b7d7385e5814c998eb20e31574bda4)
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> hash(3296245d5b64f96305f773a4830ac978a8784331)
binary stamps:
2 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1458538383000)
/Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar -> lastModified(1442568926000)
class names:
2 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object
/Users/stone/.sbt/boot/scala-2.10.6/lib/scala-library.jar -> scala.Product
internal apis:
7 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwYvppQwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwzgLGsXQABm5vdGlmeXNxAH4ADBevIMR0AAdSZXF1ZXN0c3EAfgAM0nChE3QABG5hbWVzcQB+AAw2YZkddAAFY291bnRzcQB+AAwSB68kdAAEd2FpdHNxAH4ADJ0mYFl0AA5jb3B5JGRlZmF1bHQkMnNxAH4ADLO0KzN0AA0kYXNJbnN0YW5jZU9mc3EAfgAMEZ0qF3QADHByb2R1Y3RBcml0eXNxAH4ADHaTDmd0AAZlcXVhbHNzcQB+AAwfiVkTdAAHcHJvY2Vzc3NxAH4ADL8hYjR0AAxhc0luc3RhbmNlT2ZzcQB+AAxPnuazdAAFcHJpY2VzcQB+AAzFkmoKdAAMc3luY2hyb25pemVkc3EAfgAMT2svVXQADSRpc0luc3RhbmNlT2ZzcQB+AAxXbdmjdAAIY2FuRXF1YWxzcQB+AAxgJm0udAAKUGVyc2lzZGVudHNxAH4ADJuZTTl0AARtYWluc3EAfgAM8nBInXQADXByb2R1Y3RQcmVmaXhzcQB+AAw6XMztdAAJbm90aWZ5QWxsc3EAfgAMUAVmUnQACXN1Y2Nlc3NlcnNxAH4ADC/Af190AAxpc0luc3RhbmNlT2ZzcQB+AAx2AXAAdAAIRGlyZWN0b3JzcQB+AAy+lntrdAAGPGluaXQ+c3EAfgAMQL5iXnQADlZpY2VQZXJzaXNkZW50c3EAfgAMqJxQ5HQAAj09c3EAfgAMcHt4GnQABWNsb25lc3EAfgAM4DSDrHQACEFwcHJvdmVyc3EAfgAMmPS7tXQABiRpbml0JHNxAH4ADGM065l0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADJzl1XJ0AARjb3B5c3EAfgAM2suCnXQACHRvU3RyaW5nc3EAfgAM+kwS43QAAiE9c3EAfgAMCtJST3QACGdldENsYXNzc3EAfgAMfkyVr3QADmNvcHkkZGVmYXVsdCQxc3EAfgAM6w1wdHQAAm5lc3EAfgAMF8D/2HQADEFwcHJvdmVyVGVzdHNxAH4ADOYG5Kp0AAJlcXNxAH4ADDmDdoF0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAzgdkjJdAACIyNzcQB+AAxUgbufdAAIZmluYWxpemVzcQB+AAzc+iKFdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAytOtHadAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAGc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBreHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABcQB+AEN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAW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dGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBscQB+AHV1cQB+AHYAAAAAc3EAfgB4AHEAfgAvdXEAfgB6AAAAAHNxAH4Ak3QABFVuaXRzcQB+AJdzcQB+AJp1cQB+AJ0AAAACc3EAfgCfcQB+AK1xAH4ApnVyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+ATt4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AH10AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AJRbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AIZzcQB+AJN0AAVBcnJheXEAfgFDdXEAfgCRAAAAAXNxAH4Ak3QABlN0cmluZ3NxAH4Al3NxAH4AmnVxAH4AnQAAAANzcQB+AJ9xAH4AonNxAH4An3EAfgCkcQB+AKZzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgCRAAAAAnNxAH4Ak3EAfgCWcQB+AV1zcQB+AJNxAH4AqHEAfgFDdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVjJWN3ydXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFBfLbn6atYt5RyRGrpIV269W2BcW
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwt+q9QAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAARc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwKxVZPnQABm5vdGlmeXNxAH4ADJBrpvd0AAxEeW5hdGljUHJveHlzcQB+AAygJVmfdAAEd2FpdHNxAH4ADPos5ip0AAZlcXVhbHNzcQB+AAyAA3XHdAAVREJRdWVyeUR5bmFtaWNGYWN0b3J5c3EAfgAMzXHzvHQABmNyZWF0ZXNxAH4ADDDDtnR0ABRDYWNoZVByb3ZpZGVySGFuZGxlcnNxAH4ADA9kyAp0AARtYWluc3EAfgAM6odY/nQACERCUXVlcnkyc3EAfgAMRo6vVHQACW5vdGlmeUFsbHNxAH4ADGtcWfl0AAY8aW5pdD5zcQB+AAyUxO2HdAAMUmVhbERCUXVlcnkyc3EAfgAMJWjI73QABmludm9rZXNxAH4ADDCrPGZ0AAh0b1N0cmluZ3NxAH4ADPyWA5F0AAhnZXRDbGFzc3NxAH4ADJRbr2B0AAdkb1F1ZXJ5c3EAfgAMud9D2HQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AOXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgARdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEudGhyb3dzc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AOUwACWluaGVyaXRlZHEAfgA5TAAHcGFyZW50c3EAfgA5eHEAfgBWc3EAfgBRdXEAfgA0AAAAAHNxAH4AUXVxAH4ANAAAAABzcQB+AFF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AFV0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AFVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AG50AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AG9zcQB+ADZxAH4AQ3EAfgBFcQB+AEdxAH4AEXEAfgBJfnEAfgBKdAAGTW9kdWxldXEAfgBOAAAAAHNxAH4AUXEAfgBXc3EAfgBRc3EAfgBZc3EAfgBRdXEAfgA0AAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9U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
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwNG/lUQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAfc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPBwBaXQABm5vdGlmeXNxAH4ADKM04vJ0AAF4c3EAfgAMUI3FrHQABHdhaXRzcQB+AAzXn9jHdAANJGFzSW5zdGFuY2VPZnNxAH4ADJPLeRN0AAZlcXVhbHNzcQB+AAyE7cFedAABeXNxAH4ADGNZ37l0AAxDb2xvckZhY3RvcnlzcQB+AAycy6yXdAAMYXNJbnN0YW5jZU9mc3EAfgAMuS6ZInQABXByaW50c3EAfgAMVJdPEHQABVBvaW50c3EAfgAM1zGZQHQADHN5bmNocm9uaXplZHNxAH4ADNFPV050AA0kaXNJbnN0YW5jZU9mc3EAfgAMpfiC93QADEZseXdlaWdoVGVzdHNxAH4ADJcnYyd0AARtYWluc3EAfgAMdmm32HQABWNvbG9yc3EAfgAM30ZwwHQACW5vdGlmeUFsbHNxAH4ADCjx6090AAxpc0luc3RhbmNlT2ZzcQB+AAzgSXY8dAAEaGFzaHNxAH4ADEKMHLB0AAY8aW5pdD5zcQB+AAxsHr+2dAAFYXBwbHlzcQB+AAyQGLCvdAACPT1zcQB+AAyXGbKBdAAFY2xvbmVzcQB+AAxX11JzdAAIdG9TdHJpbmdzcQB+AAyG1txddAACIT1zcQB+AAxNe+fDdAAIZ2V0Q2xhc3NzcQB+AAy74z//dAAFQ29sb3JzcQB+AAzg31PedAACbmVzcQB+AAxYtH3KdAACZXFzcQB+AAwnWyeSdAACIyNzcQB+AAzIpSiMdAAIZmluYWxpemVzcQB+AAzq1jeVdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBVeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ACF1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AbHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBVTAAJaW5oZXJpdGVkcQB+AFVMAAdwYXJlbnRzcQB+AFV4cQB+AHFzcQB+AGx1cQB+AFAAAAAAc3EAfgBsdXEAfgBQAAAAAHNxAH4AbHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AcHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AcHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AiXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AinNxAH4AfXQAA0FueXNxAH4AgXNxAH4AhHVxAH4AhwAAAAJzcQB+AIl0AAVzY2FsYXEAfgCQc3EAfgBScQB+AF91cQB+AGAAAAAAc3EAfgBiAHQABVBvaW50dXEAfgBkAAAAAH5xAH4AZnQABk1vZHVsZXVxAH4AagAAAABzcQB+AGxxAH4AcnNxAH4AbHNxAH4AdHNxAH4AbHVxAH4AUAAAAABzcQB+AGx1cQB+AFAAAAAAc3EAfgBsdXEAfgB7AAAAAnNxAH4AfXEAfgCAc3EAfgCBc3EAfgCEdXEAfgCHAAAAA3NxAH4AiXEAfgCMc3EAfgCJcQB+AI5xAH4AkHNxAH4AfXEAfgCSc3EAfgCBc3EAfgCEdXEAfgCHAAAAAnNxAH4AiXEAfgCXcQB+AJBzcQB+AFJxAH4AX3VxAH4AYAAAAABzcQB+AGIAcQB+AEF1cQB+AGQAAAAAcQB+AGh1cQB+AGoAAAAAc3EAfgBscQB+AHJzcQB+AGxzcQB+AHRzcQB+AGx1cQB+AFAAAAAAc3EAfgBsdXEAfgBQAAAAAHNxAH4AbHVxAH4AewAAAAJzcQB+AH1xAH4AgHNxAH4AgXNxAH4AhHVxAH4AhwAAAANzcQB+AIlxAH4AjHNxAH4AiXEAfgCOcQB+AJBzcQB+AH1xAH4AknNxAH4AgXNxAH4AhHVxAH4AhwAAAAJzcQB+AIlxAH4Al3EAfgCQc3EAfgBScQB+AF91cQB+AGAAAAAAc3EAfgBiAHEAfgAbdXEAfgBkAAAAAHEAfgCddXEAfgBqAAAAAHNxAH4AbHEAfgByc3EAfgBsc3EAfgB0c3EAfgBsdXEAfgBQAAAAAHNxAH4AbHVxAH4AUAAAAABzcQB+AGx1cQB+AHsAAAACc3EAfgB9cQB+AIBzcQB+AIFzcQB+AIR1cQB+AIcAAAADc3EAfgCJcQB+AIxzcQB+AIlxAH4AjnEAfgCQc3EAfgB9cQB+AJJzcQB+AIFzcQB+AIR1cQB+AIcAAAACc3EAfgCJcQB+AJdxAH4AkHNxAH4AUnEAfgBfdXEAfgBgAAAAAHNxAH4AYgBxAH4AJ3VxAH4AZAAAAABxAH4AnXVxAH4AagAAAABzcQB+AGxxAH4AcnNxAH4AbHNxAH4AdHNxAH4AbHVxAH4AUAAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4AVnEAfgBfdXEAfgBgAAAAAHNxAH4AYgBxAH4AKXVxAH4AZAAAAABzcQB+AH10AARVbml0c3EAfgCBc3EAfgCEdXEAfgCHAAAAAnNxAH4AiXEAfgCXcQB+AJB1cgAaW0x4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdDv10zod8rNw7gIAAHhwAAAAAXNyABd4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdNbFvBxkSXTjAgACWgAKaXNJbXBsaWNpdFsACnBhcmFtZXRlcnN0ABxbTHhzYnRpL2FwaS9NZXRob2RQYXJhbWV0ZXI7eHAAdXIAHFtMeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlcjvPuMVdpd21bQIAAHhwAAAAAXNyABl4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyH0WuF9NJsOoCAARaAApoYXNEZWZhdWx0TAAIbW9kaWZpZXJ0AB1MeHNidGkvYXBpL1BhcmFtZXRlck1vZGlmaWVyO0wABG5hbWVxAH4ADUwAA3RwZXEAfgDxeHAAfnIAG3hzYnRpLmFwaS5QYXJhbWV0ZXJNb2RpZmllcgAAAAAAAAAAEgAAeHEAfgBndAAFUGxhaW50AARhcmdzc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgB+WwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgBwc3EAfgB9dAAFQXJyYXlxAH4A+XVxAH4AewAAAAFzcQB+AH10AAZTdHJpbmdzcQB+AIFzcQB+AIR1cQB+AIcAAAADc3EAfgCJcQB+AIxzcQB+AIlxAH4AjnEAfgCQc3EAfgBsdXEAfgBQAAAAAHNxAH4AbHVxAH4AewAAAAJzcQB+AH1xAH4AgHEAfgETc3EAfgB9cQB+AJJxAH4A+XVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFYxPMbh3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AE4vVXNlcnMvc3RvbmUvZ2l0aHViLWNvZGUvUHJhY3RpY2VDb2RlL2Rlc2lnbi1wYXR0ZXJuL3RhcmdldC9zY2FsYS0yLjEwL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSzH2ZhGJXoqtXrlDjx0lnf9nwMJQ==
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwtCG3FAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAKc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwVqey7HQABm5vdGlmeXNxAH4ADKYW20R0AAR3YWl0c3EAfgAMEiWjW3QABmVxdWFsc3NxAH4ADHVN4Uh0AA5KYXZhU3RyaW5nVGVzdHNxAH4ADCjNKk10AARtYWluc3EAfgAMbwlV8XQACW5vdGlmeUFsbHNxAH4ADLexnZd0AAY8aW5pdD5zcQB+AAxH/SAidAAIdG9TdHJpbmdzcQB+AAy98uJwdAAIZ2V0Q2xhc3NzcQB+AAy60IN5dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgAreHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ABV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS50aHJvd3NzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AQ3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgArTAAJaW5oZXJpdGVkcQB+ACtMAAdwYXJlbnRzcQB+ACt4cQB+AEhzcQB+AEN1cQB+ACYAAAAAc3EAfgBDdXEAfgAmAAAAAHNxAH4AQ3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AR3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AR3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AYHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AYXNxAH4AKHEAfgA1cQB+ADdxAH4AOXEAfgAVcQB+ADt+cQB+ADx0AAZNb2R1bGV1cQB+AEAAAAAAc3EAfgBDcQB+AElzcQB+AENzcQB+AEtzcQB+AEN1cQB+ACYAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+ACxxAH4ANXVxAH4ANgAAAABzcQB+ADgAcQB+ABdxAH4AO3NxAH4AVHQABFVuaXRzcQB+AFhzcQB+AFt1cQB+AF4AAAACc3EAfgBgdAAFc2NhbGFxAH4AZ3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AHJ4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AD10AAVQbGFpbnQAAHNyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4AVVsADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AR3NxAH4AVHQABUFycmF5c3EAfgBYc3EAfgBbdXEAfgBeAAAAAnNxAH4AYHQABXNjYWxhcQB+AGd1cQB+AFIAAAABc3EAfgBUdAAGU3RyaW5nc3EAfgBYc3EAfgBbdXEAfgBeAAAAA3NxAH4AYHQABGphdmFzcQB+AGB0AARsYW5ncQB+AGdzcQB+AEN1cQB+ACYAAAAAc3EAfgBDdXEAfgBSAAAAAHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFYxTaOjnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AE4vVXNlcnMvc3RvbmUvZ2l0aHViLWNvZGUvUHJhY3RpY2VDb2RlL2Rlc2lnbi1wYXR0ZXJuL3RhcmdldC9zY2FsYS0yLjEwL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTxDRCUazdXI4cd512Wmi2xC0RD6Q==
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwGT+HqgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwo6DRYXQAB01lbWVudG9zcQB+AAzvczj2dAAGbm90aWZ5c3EAfgAMXpgzGHQABHJlYWRzcQB+AAwgOXb3dAALc2F2ZU1lbWVudG9zcQB+AAzaktyhdAALY3VycmVudFBhZ2VzcQB+AAzrf1LsdAALTWVtZW50b1Rlc3RzcQB+AAxwyiwcdAAEd2FpdHNxAH4ADLlFrGB0AA0kYXNJbnN0YW5jZU9mc3EAfgAMvSayhXQABHVuZG9zcQB+AAwguDg/dAAMcHJvZHVjdEFyaXR5c3EAfgAM958RLXQABmVxdWFsc3NxAH4ADNJyYn10AAxhc0luc3RhbmNlT2ZzcQB+AAzNJ02XdAAFcHJpbnRzcQB+AAzpubDkdAAMc3luY2hyb25pemVkc3EAfgAMHa4oJXQADSRpc0luc3RhbmNlT2ZzcQB+AAz/zGtIdAAIY2FuRXF1YWxzcQB+AAwdC7eIdAAEbWFpbnNxAH4ADPUjl8t0AA1wcm9kdWN0UHJlZml4c3EAfgAM7cBe8XQACW5vdGlmeUFsbHNxAH4ADFJA0IJ0AAxpc0luc3RhbmNlT2ZzcQB+AAxqG8L3dAAEQm9va3NxAH4ADBUmwu10AAY8aW5pdD5zcQB+AAzmP2MVdAAQTWVtZW50b0NhcmVUYWtlcnNxAH4ADHlRvY50AAI9PXNxAH4ADDZBUH10AAVjbG9uZXNxAH4ADHnbJS50AApnZXRNZW1lbnRvc3EAfgAMiLYbJ3QAC21lbWVudG9MaXN0c3EAfgAMOYZV43QABiRpbml0JHNxAH4ADEv9KMR0AARjb3B5c3EAfgAMnLub5nQACHRvU3RyaW5nc3EAfgAMEn46NnQAAiE9c3EAfgAM5Po20XQACXRvdGFsUGFnZXNxAH4ADAf0fRt0AAhnZXRDbGFzc3NxAH4ADAAZKc50AA5jb3B5JGRlZmF1bHQkMXNxAH4ADLYrp010AARzYXZlc3EAfgAMwI1CuHQAAm5lc3EAfgAMlvfTlHQAAmVxc3EAfgAMLZxgX3QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADCZY03d0AAIjI3NxAH4ADLPhsJl0AAhmaW5hbGl6ZXNxAH4ADOF33CV0AA5wcm9kdWN0RWxlbWVudHNxAH4ADMjXSC50AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AN3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCCc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGtMAAlpbmhlcml0ZWRxAH4Aa0wAB3BhcmVudHNxAH4Aa3hxAH4Ah3NxAH4AgnVxAH4AZgAAAABzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBp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
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwxCHLOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwljtyx3QACW9ic2VydmVyc3NxAH4ADG+to1B0AAZub3RpZnlzcQB+AAwNtgYfdAAEbmFtZXNxAH4ADLkaJ8V0AAR3YWl0c3EAfgAMasyVbnQADSRhc0luc3RhbmNlT2ZzcQB+AAxDkn+3dAAGZXF1YWxzc3EAfgAMf5JueHQADGFzSW5zdGFuY2VPZnNxAH4ADGgpt1l0AAxzeW5jaHJvbml6ZWRzcQB+AAy85fRmdAANJGlzSW5zdGFuY2VPZnNxAH4ADETDCvJ0AAlCb29rU3RvcmVzcQB+AAzsCZ53dAAMT2JzZXJ2ZXJUZXN0c3EAfgAMBUhfX3QABG1haW5zcQB+AAx+Ii/PdAAJbm90aWZ5QWxsc3EAfgAM04KgU3QABmRldGFjaHNxAH4ADJL+Byd0AAxpc0luc3RhbmNlT2ZzcQB+AAwrA/j9dAAGPGluaXQ+c3EAfgAMiHpeFnQABmF0dGFjaHNxAH4ADLb2aVx0AAI9PXNxAH4ADIGz/gd0AAVjbG9uZXNxAH4ADHHxOW90AAYkaW5pdCRzcQB+AAz+esfWdAAIdG9TdHJpbmdzcQB+AAwZnzzxdAACIT1zcQB+AAwPDrlmdAAHbm90aWZ5MnNxAH4ADEJ30s90AAhnZXRDbGFzc3NxAH4ADExCiHF0AAZ1cGRhdGVzcQB+AAwJLAfadAAIT2JzZXJ2ZXJzcQB+AAzh68EhdAAKT2JzZXJ2YWJsZXNxAH4ADDGR2gZ0AAJuZXNxAH4ADNiksDN0AAJlcXNxAH4ADNSBEc50AAIjI3NxAH4ADAiNQnJ0AAhmaW5hbGl6ZXNxAH4ADI4T6sZ0AAhoYXNoQ29kZXNxAH4ADLdMLR10AAdhZGRCb29rc3EAfgAMQPVr6XQABlJlYWRlcnNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAVzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAFxAH4AQ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgByc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4Ad3NxAH4AcnVxAH4AVgAAAABzcQB+AHJ1cQB+AFYAAAAAc3EAfgBydXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB2dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB2c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCPdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCQc3EAfgCDdAADQW55c3EAfgCHc3EAfgCKdXEAfgCNAAAAAnNxAH4Aj3QABXNjYWxhcQB+AJZzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgBcQB+AEF1cQB+AGoAAAAAcQB+AG51cQB+AHAAAAAAc3EAfgBycQB+AHhzcQB+AHJzcQB+AHpzcQB+AHJ1cQB+AFYAAAAAc3EAfgBydXEAfgBWAAAAAHNxAH4AcnVxAH4AgQAAAAJzcQB+AINxAH4AhnNxAH4Ah3NxAH4AinVxAH4AjQAAAANzcQB+AI9xAH4AknNxAH4Aj3EAfgCUcQB+AJZzcQB+AINxAH4AmHNxAH4Ah3NxAH4AinVxAH4AjQAAAAJzcQB+AI9xAH4AnXEAfgCWc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHEAfgBRdXEAfgBqAAAAAH5xAH4AbHQACENsYXNzRGVmdXEAfgBwAAAAAHNxAH4AcnEAfgB4c3EAfgByc3EAfgB6c3EAfgBydXEAfgBWAAAAAHNxAH4AcnVxAH4AVgAAAABzcQB+AHJ1cQB+AIEAAAADc3EAfgCDdAAIT2JzZXJ2ZXJzcQB+AIdzcQB+AIp1cQB+AI0AAAABcQB+AJZzcQB+AINxAH4AhnNxAH4Ah3NxAH4AinVxAH4AjQAAAANzcQB+AI9xAH4AknNxAH4Aj3EAfgCUcQB+AJZzcQB+AINxAH4AmHNxAH4Ah3NxAH4AinVxAH4AjQAAAAJzcQB+AI9xAH4AnXEAfgCWc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHEAfgAhdXEAfgBqAAAAAHEAfgC7dXEAfgBwAAAAAHNxAH4AcnEAfgB4c3EAfgByc3EAfgB6c3EAfgBydXEAfgBWAAAAAHNxAH4AcnVxAH4AVgAAAABzcQB+AHJ1cQB+AIEAAAADc3EAfgCDdAAKT2JzZXJ2YWJsZXNxAH4Ah3NxAH4AinVxAH4AjQAAAAFxAH4AlnNxAH4Ag3EAfgCGc3EAfgCHc3EAfgCKdXEAfgCNAAAAA3NxAH4Aj3EAfgCSc3EAfgCPcQB+AJRxAH4AlnNxAH4Ag3EAfgCYc3EAfgCHc3EAfgCKdXEAfgCNAAAAAnNxAH4Aj3EAfgCdcQB+AJZzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAcQB+ACN1cQB+AGoAAAAAfnEAfgBsdAAGTW9kdWxldXEAfgBwAAAAAHNxAH4AcnEAfgB4c3EAfgByc3EAfgB6c3EAfgBydXEAfgBWAAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBccQB+AGV1cQB+AGYAAAAAc3EAfgBoAHEAfgAldXEAfgBqAAAAAHNxAH4Ag3QABFVuaXRzcQB+AIdzcQB+AIp1cQB+AI0AAAACc3EAfgCPcQB+AJ1xAH4AlnVyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AQJ4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AG10AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AIRbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AHZzcQB+AIN0AAVBcnJheXEAfgEKdXEAfgCBAAAAAXNxAH4Ag3QABlN0cmluZ3NxAH4Ah3NxAH4AinVxAH4AjQAAAANzcQB+AI9xAH4AknNxAH4Aj3EAfgCUcQB+AJZzcQB+AHJ1cQB+AFYAAAAAc3EAfgBydXEAfgCBAAAAAnNxAH4Ag3EAfgCGcQB+ASRzcQB+AINxAH4AmHEAfgEKdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVjE8r3RdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFBnPzPgjt9c4XlgUyZjrIOMVdL2k
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwmLI9EgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAec3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hws9HPjnQABm5vdGlmeXNxAH4ADBWRC490AAR3YWl0c3EAfgAMfNgiHnQADSRhc0luc3RhbmNlT2ZzcQB+AAwFvoM7dAAEcmVhbHNxAH4ADJKj6MN0AAZlcXVhbHNzcQB+AAwzsEFidAAMYXNJbnN0YW5jZU9mc3EAfgAM1wlyonQADHN5bmNocm9uaXplZHNxAH4ADHJESah0AA0kaXNJbnN0YW5jZU9mc3EAfgAMi9j+5XQABG1haW5zcQB+AAy9JIyJdAAJbm90aWZ5QWxsc3EAfgAMMITuwXQABWNhY2hlc3EAfgAMkDWCAnQADGlzSW5zdGFuY2VPZnNxAH4ADAWPcy90AAY8aW5pdD5zcQB+AAylxip0dAAMREJRdWVyeVByb3h5c3EAfgAMEL7xJHQABWFwcGx5c3EAfgAMQVVEbnQADkRCUXVlcnlGYWN0b3J5c3EAfgAM1FseFHQAAj09c3EAfgAMZRpPDXQABWNsb25lc3EAfgAMChyHiHQACVByb3h5VGVzdHNxAH4ADPiq89J0AAh0b1N0cmluZ3NxAH4ADI8WXQt0AAIhPXNxAH4ADN1XpMF0AAhnZXRDbGFzc3NxAH4ADMmS5o10AAdEQlF1ZXJ5c3EAfgAMvRzFd3QAAm5lc3EAfgAMA+n9sXQAB2RvUXVlcnlzcQB+AAxrU2J0dAACZXFzcQB+AAym7WhadAACIyNzcQB+AAwfJoerdAAIZmluYWxpemVzcQB+AAw5aJZkdAAIaGFzaENvZGVzcQB+AAxHZ1DxdAALUmVhbERCUXVlcnlzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBTeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABcQB+ADt1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AanNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBTTAAJaW5oZXJpdGVkcQB+AFNMAAdwYXJlbnRzcQB+AFN4cQB+AG9zcQB+AGp1cQB+AE4AAAAAc3EAfgBqdXEAfgBOAAAAAHNxAH4AanVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AbnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AbnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25l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
external apis:
0 items
source infos:
7 items
/Users/stone/github-code/PracticeCode/design-pattern/Approver.scala -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/DynaticProxy.java -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/Flyweigh.scala -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/JavaStringTest.java -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/Memento.scala -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/ObserverTest.scala -> 
AAAAAAAAAAA=
/Users/stone/github-code/PracticeCode/design-pattern/StaticProxy.scala -> 
AAAAAAAAAAA=
compilations:
19 items
00 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWK/g5oV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
01 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLVDuMR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
02 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLVERut1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
03 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLVFaKB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
04 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLVKAXR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
05 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLVKh9p1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
06 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMTyvdF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
07 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMTzG4d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
08 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMT7AFN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
09 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMU2KCl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
10 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMU2jo51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
11 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMh3vNp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
12 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMh6Wtl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
13 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMh8tpV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
14 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMh9UGh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
15 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMh+irB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
16 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMjGu1B1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
17 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMlWj511cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
18 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWMlY3fJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATi9Vc2Vycy9zdG9uZS9naXRodWItY29kZS9QcmFjdGljZUNvZGUvZGVzaWduLXBhdHRlcm4vdGFyZ2V0L3NjYWxhLTIuMTAvY2xhc3Nlc3QAAS8=
